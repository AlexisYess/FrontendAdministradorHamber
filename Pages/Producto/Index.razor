@page "/producto/index"
@inject HttpClient httpClient

@inject NavigationManager NavigationManager

<MudText Typo="Typo.h2" Class="ml">Productos</MudText>

<MudTable Items="@productos" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Lista de Registros</MudText>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="goAdd" />
        <MudSpacer />
        <MudTextField @bind-Value="searchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Nombre</MudTh>
        <MudTh>Categoria</MudTh>
        <MudTh>Marca</MudTh>
        <MudTh>Descripcion</MudTh>
        <MudTh>Precio</MudTh>
        <MudTh>Fecha</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd DataLabel="Nombre">@context.IdCategoria</MudTd>
        <MudTd DataLabel="Nombre">@context.IdMarca</MudTd>
        <MudTd DataLabel="Descripcion">@context.Descripcion</MudTd>
        <MudTd DataLabel="Precio">@context.Precio</MudTd>
        <MudTd DataLabel="Fecha">@context.Fecha</MudTd>
        <MudTd>
            <MudButton Link="@($"/producto/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Tertiary"
                       Class="text-center">Editar</MudButton>
            <MudButton Link="@($"/producto/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Warning"
                       Class="text-center">Eliminar</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Producto> productos = new List<Producto>();
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.GetStringAsync("producto");
        productos = JsonSerializer.Deserialize<IEnumerable<Producto>>(httpResponse, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }
    private void goAdd()
    {
        NavigationManager.NavigateTo("/producto/agregar");
    }
}
